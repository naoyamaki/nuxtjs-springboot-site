/*
 * This file is generated by jOOQ.
 */
package com.example.infrastructure.jooq.tables.records;


import com.example.infrastructure.jooq.tables.Review;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReviewRecord extends UpdatableRecordImpl<ReviewRecord> implements Record9<Integer, Integer, String, String, Integer, Integer, LocalDateTime, LocalDateTime, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>main.review.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>main.review.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>main.review.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>main.review.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>main.review.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>main.review.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>main.review.body</code>.
     */
    public void setBody(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>main.review.body</code>.
     */
    public String getBody() {
        return (String) get(3);
    }

    /**
     * Setter for <code>main.review.category_id</code>.
     */
    public void setCategoryId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>main.review.category_id</code>.
     */
    public Integer getCategoryId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>main.review.status</code>.
     */
    public void setStatus(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>main.review.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>main.review.insert_date</code>.
     */
    public void setInsertDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>main.review.insert_date</code>.
     */
    public LocalDateTime getInsertDate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>main.review.update_date</code>.
     */
    public void setUpdateDate(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>main.review.update_date</code>.
     */
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>main.review.delete_flag</code>.
     */
    public void setDeleteFlag(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>main.review.delete_flag</code>.
     */
    public Byte getDeleteFlag() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, String, Integer, Integer, LocalDateTime, LocalDateTime, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Integer, String, String, Integer, Integer, LocalDateTime, LocalDateTime, Byte> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Review.REVIEW.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Review.REVIEW.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Review.REVIEW.TITLE;
    }

    @Override
    public Field<String> field4() {
        return Review.REVIEW.BODY;
    }

    @Override
    public Field<Integer> field5() {
        return Review.REVIEW.CATEGORY_ID;
    }

    @Override
    public Field<Integer> field6() {
        return Review.REVIEW.STATUS;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Review.REVIEW.INSERT_DATE;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Review.REVIEW.UPDATE_DATE;
    }

    @Override
    public Field<Byte> field9() {
        return Review.REVIEW.DELETE_FLAG;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public String component4() {
        return getBody();
    }

    @Override
    public Integer component5() {
        return getCategoryId();
    }

    @Override
    public Integer component6() {
        return getStatus();
    }

    @Override
    public LocalDateTime component7() {
        return getInsertDate();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdateDate();
    }

    @Override
    public Byte component9() {
        return getDeleteFlag();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public String value4() {
        return getBody();
    }

    @Override
    public Integer value5() {
        return getCategoryId();
    }

    @Override
    public Integer value6() {
        return getStatus();
    }

    @Override
    public LocalDateTime value7() {
        return getInsertDate();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdateDate();
    }

    @Override
    public Byte value9() {
        return getDeleteFlag();
    }

    @Override
    public ReviewRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ReviewRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public ReviewRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public ReviewRecord value4(String value) {
        setBody(value);
        return this;
    }

    @Override
    public ReviewRecord value5(Integer value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public ReviewRecord value6(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public ReviewRecord value7(LocalDateTime value) {
        setInsertDate(value);
        return this;
    }

    @Override
    public ReviewRecord value8(LocalDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public ReviewRecord value9(Byte value) {
        setDeleteFlag(value);
        return this;
    }

    @Override
    public ReviewRecord values(Integer value1, Integer value2, String value3, String value4, Integer value5, Integer value6, LocalDateTime value7, LocalDateTime value8, Byte value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReviewRecord
     */
    public ReviewRecord() {
        super(Review.REVIEW);
    }

    /**
     * Create a detached, initialised ReviewRecord
     */
    public ReviewRecord(Integer id, Integer userId, String title, String body, Integer categoryId, Integer status, LocalDateTime insertDate, LocalDateTime updateDate, Byte deleteFlag) {
        super(Review.REVIEW);

        setId(id);
        setUserId(userId);
        setTitle(title);
        setBody(body);
        setCategoryId(categoryId);
        setStatus(status);
        setInsertDate(insertDate);
        setUpdateDate(updateDate);
        setDeleteFlag(deleteFlag);
    }
}
